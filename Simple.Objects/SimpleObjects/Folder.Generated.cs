using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#nullable enable

namespace Simple.Objects
{
    #region |   Code Generated by Simple.Objects Code Generator   |

    partial class Folder
    {
        #region |   Protected Members   |

        protected string name = String.Empty, oldName = String.Empty;
        protected string description = String.Empty, oldDescription = String.Empty;

        #endregion |   Protected Members   |

        #region |   Private Static Members   |

        private static Func<Folder, object?>[] GetFieldValueMethods;
        private static Func<Folder, object?>[] GetOldFieldValueMethods;
        private static Action<Folder, object>[] SetFieldValueMethods;
        private static Action<Folder, object>[] SetOldFieldValueMethods;

        #endregion |   Private Static Members   |

        #region |   Static Methods Initialization   |

        static Folder()
        {
            int maxIndex = FolderModel.PropertyModel.GetCollection().GetMaxIndex();

            GetFieldValueMethods = new Func<Folder, object?>[maxIndex + 1];
            GetFieldValueMethods[FolderModel.PropertyModel.Id.PropertyIndex]          = (item) => item.id;
            GetFieldValueMethods[FolderModel.PropertyModel.Name.PropertyIndex]        = (item) => item.name;
            GetFieldValueMethods[FolderModel.PropertyModel.Description.PropertyIndex] = (item) => item.description;

            GetOldFieldValueMethods = new Func<Folder, object?>[maxIndex + 1];
            GetOldFieldValueMethods[FolderModel.PropertyModel.Id.PropertyIndex]          = (item) => item.oldId;
            GetOldFieldValueMethods[FolderModel.PropertyModel.Name.PropertyIndex]        = (item) => item.oldName;
            GetOldFieldValueMethods[FolderModel.PropertyModel.Description.PropertyIndex] = (item) => item.oldDescription;

            SetFieldValueMethods = new Action<Folder, object>[maxIndex + 1];
            SetFieldValueMethods[FolderModel.PropertyModel.Id.PropertyIndex]          = (item, value) => item.id = (long)value;
            SetFieldValueMethods[FolderModel.PropertyModel.Name.PropertyIndex]        = (item, value) => item.name = (string)value;
            SetFieldValueMethods[FolderModel.PropertyModel.Description.PropertyIndex] = (item, value) => item.description = (string)value;

            SetOldFieldValueMethods = new Action<Folder, object>[maxIndex + 1];
            SetOldFieldValueMethods[FolderModel.PropertyModel.Id.PropertyIndex]          = (item, value) => item.oldId = (long)value;
            SetOldFieldValueMethods[FolderModel.PropertyModel.Name.PropertyIndex]        = (item, value) => item.oldName = (string)value;
            SetOldFieldValueMethods[FolderModel.PropertyModel.Description.PropertyIndex] = (item, value) => item.oldDescription = (string)value;
        }

        #endregion |   Static Methods Initialization   |

        #region |   Properties by Object Property Model   |

        /// <summary>
        /// Gets or sets Name
        /// </summary>
        public string Name
        {
            get { return this.name; }
            set { this.SetPropertyValue(FolderModel.PropertyModel.Name, value); }
		}

        /// <summary>
        /// Gets or sets Description
        /// </summary>
        public string Description
        {
            get { return this.description; }
            set { this.SetPropertyValue(FolderModel.PropertyModel.Description, value); }
		}

        #endregion |   Properties by Object Property Model   |

        #region |   One-To-Many Relation Properties   |

        /// <summary>
        /// Gets one-to-many relation foreign GraphElements collection.
        /// </summary>
        public override SimpleObjectCollection<GraphElement> GraphElements
        {
            get { return this.GetOneToManyForeignObjectCollection<GraphElement>(RelationPolicyModelBase.OneToManyGraphElementToSimpleObject); }
        }

        #endregion |   One-To-Many Relation Properties   |

        #region |   Public Overriden Methods   |

        /// <summary>
        /// Gets the FolderModel definition instance.
        /// </summary>
        public override ISimpleObjectModel GetModel()
        {
            return FolderModel.Instance; 
        }

        /// <summary>
        /// Gets the one-to-many collection based on relation key. If no one-to-many relation specified in relation model for this object, the base class method is called.
        /// </summary>
        /// <param name="relationKey">The one-to-many relation key</param>
        /// <returns>The <see cref="SimpleObjectCollection?"/> result.</returns>
        public override SimpleObjectCollection? GetOneToManyForeignObjectCollection(int relationKey)
        {
            if (relationKey == RelationPolicyModelBase.OneToManyGraphElementToSimpleObject.RelationKey)
                return this.GraphElements;

            return base.GetOneToManyForeignObjectCollection(relationKey);
        }

        #endregion |   Public Overriden Methods   |

        #region |   Protected Abstract Overriden Methods  |

        /// <summary>
        /// Gets field property value by property index.
        /// </summary>
        protected override object? GetFieldValue(int propertyIndex)
        {
            return GetFieldValueMethods[propertyIndex](this);
        }

        /// <summary>
        /// Gets field old property value by property index.
        /// </summary>
        protected override object? GetOldFieldValue(int propertyIndex)
        {
            return GetOldFieldValueMethods[propertyIndex](this);
        }

        /// <summary>
        /// Sets field property value by property index.
        /// </summary>
        protected override void SetFieldValue(int propertyIndex, object value)
        {
            SetFieldValueMethods[propertyIndex](this, value);
        }

        /// <summary>
        /// Sets field old property value by property index.
        /// </summary>
        protected override void SetOldFieldValue(int propertyIndex, object value)
        {
            SetOldFieldValueMethods[propertyIndex](this, value);
        }

        #endregion |   Protected Abstract Overriden Methods  |
    }

    #endregion |   Code Generated by Simple.Objects Code Generator   |
}
